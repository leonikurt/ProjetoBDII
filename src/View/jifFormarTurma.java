/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Connector.HibernateUtil;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import model.Disciplina;
import model.Turma;
import model.Aluno;
import model.Usuario;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.exception.GenericJDBCException;

/**
 *
 * @author leoni
 */
public class jifFormarTurma extends javax.swing.JInternalFrame {

    public Disciplina[] dt = new Disciplina[100];
    private int codDisciplina;
    private Usuario user;
    /**
     * Creates new form jifFormarTurma
     */
    public jifFormarTurma() {
        initComponents();
        getAll();
    }
    
    public jifFormarTurma(Usuario user) {
        initComponents();
        this.user = user;
        CheckUser();
        getAll();
    }
    
    public void CheckUser(){
        String tipo = this.user.getTipo();
        if(tipo.compareTo("comum") == 0 || tipo.compareTo("dcomum") == 0){
            btnFormar.setEnabled(false);
        }
        
    }

    public String createSQLSelect() {
        String sql = "Select t from Turma t ";
        String where = " where ";
        String join = " ";
        boolean whereFlag = false;
        if (!txtNome.getText().isEmpty()) {
            where = where + " t.nome = '" + txtNome.getText() + "'";
            whereFlag = true;
        }

        if (whereFlag) {
            sql = sql + where;
        }
//        JOptionPane.showMessageDialog(null,sql);
        return sql;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    public void getAll() {
        String sql = "from Turma t";

        SessionFactory sf = Connector.HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        Query query = session.createQuery(sql);
        List<Turma> results = (List<Turma>) query.list();

        for (Turma t : results) {
            jCbTurma.addItem(t);
        }

        session.close();
    }

    public boolean buscarDisciplina() {
        boolean resp = false;
        String sql;
        sql = "from Turma d where d.nome =:nome";
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        Query query = session.createQuery(sql);
        query.setString("nome", txtNome.getText());
        List<Turma> results = (List<Turma>) query.list();
        if (results.size() > 0) {
            resp = true;
            this.codDisciplina = results.get(0).getCodigo_disciplina();
        } else {
            JOptionPane.showMessageDialog(null, "Turma n√£o encontrada!");
        }

        session.close();

        return resp;
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNome = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListTurma = new javax.swing.JList<>();
        btnConsultar = new javax.swing.JButton();
        btnFormar = new javax.swing.JButton();
        jCbTurma = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();

        setClosable(true);
        setIconifiable(true);

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome");

        jScrollPane1.setViewportView(jListTurma);

        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnFormar.setText("Formar");
        btnFormar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFormarActionPerformed(evt);
            }
        });

        jCbTurma.setEditable(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(jCbTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnConsultar)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(btnFormar)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCbTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnConsultar))
                        .addGap(34, 34, 34)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFormar)
                        .addGap(5, 5, 5))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void btnFormarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFormarActionPerformed

        if (txtNome.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Digite o nome da turma!");
        } else {
            if (buscarDisciplina()) {
                SessionFactory sf = Connector.HibernateUtil.getSessionFactory();
                Session session = sf.openSession();

                Transaction tx = session.beginTransaction();
                try {

                    Query query = session.createSQLQuery("CALL checarTurma(:disciplina)");
                    query.setInteger("disciplina", this.codDisciplina);
                    int result = query.executeUpdate();

                    if (result > 0) {
                        JOptionPane.showMessageDialog(null, "Turma formada!");
                    } else {
                        throw new Exception("Houve um problema no cadastro.");
                    }

                    tx.commit();
                } catch (GenericJDBCException e) {
                    JOptionPane.showMessageDialog(null, e.getCause().getMessage());
//                af.getCurrentSession().getTransaction().rollback();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
//                af.getCurrentSession().getTransaction().rollback();
                } finally {
                    session.flush();
                    session.close();
                }
            }
        }
    }//GEN-LAST:event_btnFormarActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        DefaultListModel lista = new DefaultListModel();
        String sql = createSQLSelect();
        if (sql.isEmpty()) {
            sql = "from Turma t";
        }
        SessionFactory sf = Connector.HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        Query query = session.createQuery(sql);

        List<Turma> results = (List<Turma>) query.list();
        for (Turma t : results) {
            lista.addElement(t.getNome());
        }

        jListTurma.setModel(lista);

        session.close();
    }//GEN-LAST:event_btnConsultarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnFormar;
    private javax.swing.JComboBox<Object> jCbTurma;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jListTurma;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
